<?php
/**
 * Created by PhpStorm.
 * User: Nguyen Tuan Linh
 * Date: 2015-11-26
 * Time: 16:15
 */

namespace Antoree\Models\Plugins\SocialIntegration;

use Antoree\Models\Helpers\CallableObject;
use Antoree\Models\Themes\Extension as BaseExtension;


class Extension extends BaseExtension
{
    const EXTENSION_NAME = 'social_integration';
    const EXTENSION_DISPLAY_NAME = 'Social Integration';
    const EXTENSION_DESCRIPTION = 'Integrate Social Functions into website';
    const EXTENSION_EDITABLE = true;

    protected $facebookAppId;
    protected $facebookCommentEnable;
    protected $facebookCommentColorScheme;
    protected $facebookCommentColorSchemeValues = [
        'light', 'dark',
    ];
    protected $facebookCommentNumPosts;
    protected $facebookCommentOrderBy;
    protected $facebookCommentOrderByValues = [
        'social', 'reversing_time', 'time'
    ];

    public function __construct()
    {
        parent::__construct();
    }

    protected function __init()
    {
        parent::__init(); // TODO: Change the autogenerated stub

        $this->facebookAppId = $this->getProperty('facebook_app_id');
        $this->facebookCommentEnable = $this->getProperty('facebook_comment_enable') == 1;
        $this->facebookCommentColorScheme = defPr($this->getProperty('facebook_comment_color_scheme'), 'light');
        $this->facebookCommentNumPosts = defPr($this->getProperty('facebook_comment_num_posts'), 10);
        $this->facebookCommentOrderBy = defPr($this->getProperty('facebook_comment_order_by'), 'social');
    }

    protected function __initAdminViewParams()
    {
        $this->setViewParams([
            'facebook_app_id' => $this->facebookAppId,
            'facebook_comment_enable' => $this->facebookCommentEnable,
            'facebook_comment_color_scheme' => $this->facebookCommentColorScheme,
            'facebook_comment_color_scheme_values' => $this->facebookCommentColorSchemeValues,
            'facebook_comment_num_posts' => $this->facebookCommentNumPosts,
            'facebook_comment_order_by' => $this->facebookCommentOrderBy,
            'facebook_comment_order_by_values' => $this->facebookCommentOrderByValues,
        ]);
    }

    protected function jsFacebookSdk($appId)
    {
        return '<div id="fb-root"></div>
        <script>(function(d, s, id) {
          var js, fjs = d.getElementsByTagName(s)[0];
          if (d.getElementById(id)) return;
          js = d.createElement(s); js.id = id;
          js.src = "//connect.facebook.net/' . fullCurrentLocale() . '/sdk.js#xfbml=1&version=v2.5&appId=' . $appId . '";
          fjs.parentNode.insertBefore(js, fjs);
        }(document, \'script\', \'facebook-jssdk\'));</script>';
    }

    protected function jsLinkedIn()
    {
        return '<script src="//platform.linkedin.com/in.js" type="text/javascript"> lang: en_US</script>'; // ?? doan nay co dung ko day @@
    }

    protected function jsTwitter(){
        return '<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?"http":"https";
        if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}
        (document, "script", "twitter-wjs");</script>';
    }

    protected function jsGplus(){
        return '<script src="https://apis.google.com/js/platform.js" async defer></script>';
    }
    public function register()
    {
        // buoc dau xong la da clone con fb itegrate

        // section 1 : tich hop fb function

//        enqueue_theme_footer($this->jsFacebookSdk($this->facebookAppId), 'facebook_js_sdk'); // include js sdk
//        add_filter('open_graph_tags_before_render', new CallableObject(function ($data) { // set fb app id
//            $data['fb:app_id'] = $this->facebookAppId;
//            return $data;
//        }));
//
//        if ($this->facebookCommentEnable) {
//            view()->share('facebook_comment', true);
//            $color_scheme = $this->facebookCommentColorScheme;
//            $num_posts = $this->facebookCommentNumPosts;
//            $order_by = $this->facebookCommentOrderBy;
//            add_place('facebook_comment', new CallableObject(function ($article) use ($color_scheme, $num_posts, $order_by) {
//                $url = localizedURL('blog/{id}', ['id' => $article->id], false); // made unique url
//                $color_scheme = ' data-colorscheme="' . $color_scheme . '"';
//                $num_posts = ' data-numposts="' . $num_posts . '"';
//                $order_by = ' data-order-by="' . $order_by . '"';
//                $width = ' data-width="100%';
//                return '<div class="fb-comments" data-href="' . $url . '"' . $color_scheme . $num_posts . $order_by . $width . '"></div>';
//            }));
//        }
//
//        add_place('social_sharing', new CallableObject(function ($trans_article) {
//            $fb_like = '<div class="fb-like" data-href="' . localizedURL('blog/view/{slug}', ['slug' => $trans_article->slug]) . '"
//                        data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></div>';
//            $fb_share = '<div class="fb-share-button" data-href="' . localizedURL('blog/view/{slug}', ['slug' => $trans_article->slug]) . '"
//                        data-layout="button_count"></div>';
//            return $fb_like . $fb_share;
//        }));
//
//        // section2 : tich hop linkedin
//        enqueue_theme_footer($this->jsLinkedIn(), 'linkedin_js_sdk'); // include js sdk
//        add_place('social_sharing', new CallableObject(function ($trans_article) {
//            $li_share = '<script type="IN/Share" data-url="' . localizedURL('blog/view/{slug}', ['slug' => $trans_article->slug]) . '"
//                        data-counter="right"></script>';
//            return $li_share;
//        }));

        // neu anh muon content dang ul li thi lam cach nay la hay nhat
        // section la de include js vao trong theme
        // better with this coding

        // common sharing buttons
        add_place('social_sharing', new CallableObject(function ($trans_article) { // them noi dung vao place social_sharing
            $url_sharing = localizedURL('blog/{slug}-{id}', ['slug' => $trans_article->slug,'id' => $trans_article->art_id]);
            $buttons = [];
            $buttons = content_filter('social_sharing_buttons', $buttons); // filter buttons : for adding extra button
            if (count($buttons) > 0) { // if has any of buttons
                array_walk($buttons, function (&$button) use ($url_sharing) { // replace sharing_url with real url each buttons
                    $button = str_replace('{sharing_url}', $url_sharing, $button);
                });
                return '<ul style="display:inline-block; float:left; padding-left:10px;">
                        <li style="display:inline-block; vertical-align:top;">' . implode('</li><li style="display:inline-block; vertical-align:top;">', $buttons) . '</li></ul>';
            }
            return ''; // if not dont show anything
        }));

        // if (facebook enable)
        enqueue_theme_footer($this->jsFacebookSdk($this->facebookAppId), 'facebook_js_sdk'); // include js sdk
        add_filter('open_graph_tags_before_render', new CallableObject(function ($data) { // set fb app id
            $data['fb:app_id'] = $this->facebookAppId;
            return $data;
        }));
        if ($this->facebookCommentEnable) {
            view()->share('facebook_comment', true);
            $color_scheme = $this->facebookCommentColorScheme;
            $num_posts = $this->facebookCommentNumPosts;
            $order_by = $this->facebookCommentOrderBy;

            add_place('facebook_comment', new CallableObject(function ($article) use ($color_scheme, $num_posts, $order_by) {
                // dd($article->translations()->first());
                $art_tran = $article->translations()->first();
                $url = localizedURL('blog/{slug}-{id}', ['slug'=>$art_tran->slug,'id' => $article->id], false); // made unique url

                $color_scheme = ' data-colorscheme="' . $color_scheme . '"';
                $num_posts = ' data-numposts="' . $num_posts . '"';
                $order_by = ' data-order-by="' . $order_by . '"';
                $width = ' data-width="100%';
                return '<div class="fb-comments" data-href="' . $url . '"' . $color_scheme . $num_posts . $order_by . $width . '"></div>';
            }));
        }
        add_filter('social_sharing_buttons', new CallableObject(function ($buttons) { // them 2 nut 1 like + 1 share moi
            $buttons[] = '<div class="fb-like" data-href="{sharing_url}"
                        data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></div>';
            $buttons[] = '<div class="fb-share-button" data-href="{sharing_url}"
                        data-layout="button_count"></div>';
            return $buttons;
        }));
        // endif
        // if (linkedin enable)
        enqueue_theme_footer($this->jsLinkedIn(), 'linkedin_js_sdk'); // include js sdk
        add_filter('social_sharing_buttons', new CallableObject(function ($buttons) { // them 1 nut share moi
            $buttons[] = '<script type="IN/Share" data-url="{sharing_url}" data-counter="right"></script>';
            return $buttons;
        }));
        // endif

        // if (twitter enable)
        enqueue_theme_footer($this->jsTwitter(), 'twitter_js_sdk'); // include js sdk
        add_filter('social_sharing_buttons', new CallableObject(function ($buttons) {
            $buttons[] = '<a href="https://twitter.com/share" class="twitter-share-button"{count}
             data-url="{sharing_url}" data-via="antoree_edu">Tweet</a>';
            return $buttons;
        }));
        // endif

        // if (G+ enable)
        enqueue_theme_footer($this->jsGplus(), 'gplus_js_sdk'); // include js sdk
        add_filter('social_sharing_buttons', new CallableObject(function ($buttons) {
            $buttons[] = '<div class="g-plusone" data-size="medium" data-annotation="bubble"
            data-href="{sharing_url}"></div>';
            return $buttons;
        }));
        // endif
    }

    public function fields()
    {
        return array_merge(parent::fields(), [
            'facebook_app_id',
            'facebook_comment_enable',
            'facebook_comment_color_scheme',
            'facebook_comment_num_posts',
            'facebook_comment_order_by',
        ]);
    }

    public function validationRules()
    {
        return array_merge(parent::validationRules(), [
            'facebook_app_id' => 'required',
            'facebook_comment_enable' => 'sometimes|in:1',
            'facebook_comment_color_scheme' => 'required_if:facebook_comment_enable,1|in:' . implode(',', $this->facebookCommentColorSchemeValues),
            'facebook_comment_num_posts' => 'required_if:facebook_comment_enable,1|min:1',
            'facebook_comment_order_by' => 'required_if:facebook_comment_enable,1|in:' . implode(',', $this->facebookCommentOrderByValues),
        ]);
    }
}