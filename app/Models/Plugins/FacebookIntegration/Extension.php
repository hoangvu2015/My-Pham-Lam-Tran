<?php
/**
 * Created by PhpStorm.
 * User: Nguyen Tuan Linh
 * Date: 2015-11-26
 * Time: 16:15
 */

namespace Antoree\Models\Plugins\FacebookIntegration;

use Antoree\Models\Helpers\CallableObject;
use Antoree\Models\Themes\Extension as BaseExtension;


class Extension extends BaseExtension
{
    const EXTENSION_NAME = 'facebook_integration';
    const EXTENSION_DISPLAY_NAME = 'Facebook Integration';
    const EXTENSION_DESCRIPTION = 'Integrate Facebook Functions into website';
    const EXTENSION_EDITABLE = true;

    protected $appId;
    protected $commentEnable;
    protected $commentColorScheme;
    protected $commentColorSchemeValues = [
        'light', 'dark',
    ];
    protected $commentNumPosts;
    protected $commentOrderBy;
    protected $commentOrderByValues = [
        'social', 'reversing_time', 'time'
    ];

    public function __construct()
    {
        parent::__construct();
    }

    protected function __init()
    {
        parent::__init(); // TODO: Change the autogenerated stub

        $this->appId = env('FACEBOOK_CLIENT_ID');//$this->getProperty('app_id');
        $this->commentEnable = $this->getProperty('comment_enable') == 1;
        $this->commentColorScheme = defPr($this->getProperty('comment_color_scheme'), 'light');
        $this->commentNumPosts = defPr($this->getProperty('comment_num_posts'), 10);
        $this->commentOrderBy = defPr($this->getProperty('comment_order_by'), 'social');
    }

    protected function __initAdminViewParams()
    {
        $this->setViewParams([
            'app_id' => $this->appId,
            'comment_enable' => $this->commentEnable,
            'comment_color_scheme' => $this->commentColorScheme,
            'comment_color_scheme_values' => $this->commentColorSchemeValues,
            'comment_num_posts' => $this->commentNumPosts,
            'comment_order_by' => $this->commentOrderBy,
            'comment_order_by_values' => $this->commentOrderByValues,
        ]);
    }

    protected function jsSdk($appId)
    {
        return '<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/' . fullCurrentLocale() . '/sdk.js#xfbml=1&version=v2.5&appId=' . $appId . '";
  fjs.parentNode.insertBefore(js, fjs);
}(document, \'script\', \'facebook-jssdk\'));</script>';
    }

    public function register()
    {
        enqueue_theme_footer($this->jsSdk($this->appId), 'facebook_js_sdk');
        add_filter('open_graph_tags_before_render', new CallableObject(function ($data) {
            $data['fb:app_id'] = $this->appId;
            return $data;
        }));

        if ($this->commentEnable) {
            view()->share('facebook_comment', true);
            $color_scheme = $this->commentColorScheme;
            $num_posts = $this->commentNumPosts;
            $order_by = $this->commentOrderBy;
            // add_place('facebook_comment', new CallableObject(function ($article) use ($color_scheme, $num_posts, $order_by) {
            //     $url = localizedURL('blog/{id}', ['id' => $article->id], false); // made unique url
            //     $color_scheme = ' data-colorscheme="' . $color_scheme . '"';
            //     $num_posts = ' data-numposts="' . $num_posts . '"';
            //     $order_by = ' data-order-by="' . $order_by . '"';
            //     $width = ' data-width="100%';
            //     return '<div class="fb-comments" data-href="' . $url . '"' . $color_scheme . $num_posts . $order_by . $width . '"></div>';
            // }));
        }
    }

    public function fields()
    {
        return array_merge(parent::fields(), [
            'app_id',
            'comment_enable',
            'comment_color_scheme',
            'comment_num_posts',
            'comment_order_by',
        ]);
    }

    public function validationRules()
    {
        return array_merge(parent::validationRules(), [
            'app_id' => 'required',
            'comment_enable' => 'sometimes|in:1',
            'comment_color_scheme' => 'required_if:comment_enable,1|in:' . implode(',', $this->commentColorSchemeValues),
            'comment_num_posts' => 'required_if:comment_enable,1|min:1',
            'comment_order_by' => 'required_if:comment_enable,1|in:' . implode(',', $this->commentOrderByValues),
        ]);
    }
}